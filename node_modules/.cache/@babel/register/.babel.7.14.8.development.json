{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"filename\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\main.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\",
        "sourceFileName": "main.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _handler = require(\"./modules/basic/handler.js\");\n\nvar _index = require(\"./modules/basic/index.js\");\n\n'use strict';\n\nvar Discord = require(\"discord.js\");\n\nvar bot = new Discord.Client({\n  partials: ['MESSAGE', 'CHANNEL', 'REACTION']\n});\n\nrequire('@babel/register')({\n  presets: ['@babel/preset-env']\n});\n\nrequire('dotenv').config();\n\nbot.on('ready', function () {\n  console.log('loaded');\n});\nbot.on('message', function (msg) {\n  //custom.parsem(msg)\n  _handler.whatever.inputhandle(msg, bot);\n});\nbot.on(\"guildCreate\", function (guild) {\n  var found = false;\n  guild.channels.cache.each(function (channel, id) {\n    if (found == true || channel.type != \"text\") {\n      return;\n    }\n\n    if (guild.me.permissionsIn(channel).has(\"SEND_MESSAGES\") && guild.me.permissionsIn(channel).has(\"VIEW_CHANNEL\")) {\n      found = true;\n      return channel.send(\"Thanks for the invitation! Tell the server owner to do \\\"dy!setup\\\" to generate the admin and moderator roles. \\\r\n          The bot's moderation system won't work without them!\\n(P.S: You can type \\\"dy!help\\\" after to see what I'm all about)\");\n    }\n  });\n});\n\n_index.index.initialize(bot);\n\nbot.login(process.env.TOKEN);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiRGlzY29yZCIsInJlcXVpcmUiLCJib3QiLCJDbGllbnQiLCJwYXJ0aWFscyIsInByZXNldHMiLCJjb25maWciLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJtc2ciLCJ3aGF0ZXZlciIsImlucHV0aGFuZGxlIiwiZ3VpbGQiLCJmb3VuZCIsImNoYW5uZWxzIiwiY2FjaGUiLCJlYWNoIiwiY2hhbm5lbCIsImlkIiwidHlwZSIsIm1lIiwicGVybWlzc2lvbnNJbiIsImhhcyIsInNlbmQiLCJpbmRleCIsImluaXRpYWxpemUiLCJsb2dpbiIsInByb2Nlc3MiLCJlbnYiLCJUT0tFTiJdLCJtYXBwaW5ncyI6Ijs7QUFTQTs7QUFDQTs7QUFWQyxZQUFEOztBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsR0FBRyxHQUFHLElBQUlGLE9BQU8sQ0FBQ0csTUFBWixDQUFtQjtBQUM3QkMsRUFBQUEsUUFBUSxFQUFFLENBQUMsU0FBRCxFQUFZLFNBQVosRUFBdUIsVUFBdkI7QUFEbUIsQ0FBbkIsQ0FBWjs7QUFJQUgsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkI7QUFBQ0ksRUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFBVixDQUEzQjs7QUFDQUosT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkssTUFBbEI7O0FBS0FKLEdBQUcsQ0FBQ0ssRUFBSixDQUFPLE9BQVAsRUFBZ0IsWUFBTTtBQUNwQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNELENBRkQ7QUFJQVAsR0FBRyxDQUFDSyxFQUFKLENBQU8sU0FBUCxFQUFrQixVQUFBRyxHQUFHLEVBQUk7QUFDckI7QUFDQUMsb0JBQVNDLFdBQVQsQ0FBcUJGLEdBQXJCLEVBQXlCUixHQUF6QjtBQUNILENBSEQ7QUFLQUEsR0FBRyxDQUFDSyxFQUFKLENBQU8sYUFBUCxFQUFzQixVQUFBTSxLQUFLLEVBQUk7QUFDM0IsTUFBSUMsS0FBSyxHQUFHLEtBQVo7QUFDQUQsRUFBQUEsS0FBSyxDQUFDRSxRQUFOLENBQWVDLEtBQWYsQ0FBcUJDLElBQXJCLENBQTBCLFVBQVNDLE9BQVQsRUFBa0JDLEVBQWxCLEVBQXNCO0FBQzVDLFFBQUdMLEtBQUssSUFBSSxJQUFULElBQWlCSSxPQUFPLENBQUNFLElBQVIsSUFBZ0IsTUFBcEMsRUFBNEM7QUFDMUM7QUFDRDs7QUFDRCxRQUFHUCxLQUFLLENBQUNRLEVBQU4sQ0FBU0MsYUFBVCxDQUF1QkosT0FBdkIsRUFBZ0NLLEdBQWhDLENBQW9DLGVBQXBDLEtBQXdEVixLQUFLLENBQUNRLEVBQU4sQ0FBU0MsYUFBVCxDQUF1QkosT0FBdkIsRUFBZ0NLLEdBQWhDLENBQW9DLGNBQXBDLENBQTNELEVBQWdIO0FBQzlHVCxNQUFBQSxLQUFLLEdBQUcsSUFBUjtBQUNBLGFBQU9JLE9BQU8sQ0FBQ00sSUFBUixDQUFhO0FBQzlCLGdJQURpQixDQUFQO0FBRUQ7QUFDSixHQVREO0FBVUQsQ0FaSDs7QUFjQUMsYUFBTUMsVUFBTixDQUFpQnhCLEdBQWpCOztBQUNBQSxHQUFHLENBQUN5QixLQUFKLENBQVVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxLQUF0QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGJmaWNtXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxWU0dpdGh1YlxcZGJvdFxcIiwic291cmNlc0NvbnRlbnQiOlsiKCd1c2Ugc3RyaWN0Jyk7XHJcbmNvbnN0IERpc2NvcmQgPSByZXF1aXJlKFwiZGlzY29yZC5qc1wiKTtcclxuY29uc3QgYm90ID0gbmV3IERpc2NvcmQuQ2xpZW50KHtcclxuICBwYXJ0aWFsczogWydNRVNTQUdFJywgJ0NIQU5ORUwnLCAnUkVBQ1RJT04nXVxyXG59KTtcclxuXHJcbnJlcXVpcmUoJ0BiYWJlbC9yZWdpc3RlcicpKHtwcmVzZXRzOiBbJ0BiYWJlbC9wcmVzZXQtZW52J119KTtcclxucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XHJcblxyXG5pbXBvcnQge3doYXRldmVyfSBmcm9tICcuL21vZHVsZXMvYmFzaWMvaGFuZGxlci5qcyc7XHJcbmltcG9ydCB7aW5kZXh9IGZyb20gJy4vbW9kdWxlcy9iYXNpYy9pbmRleC5qcyc7XHJcblxyXG5ib3Qub24oJ3JlYWR5JywgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKCdsb2FkZWQnKTtcclxufSk7XHJcblxyXG5ib3Qub24oJ21lc3NhZ2UnLCBtc2cgPT4ge1xyXG4gICAgLy9jdXN0b20ucGFyc2VtKG1zZylcclxuICAgIHdoYXRldmVyLmlucHV0aGFuZGxlKG1zZyxib3QpO1xyXG59KTtcclxuXHJcbmJvdC5vbihcImd1aWxkQ3JlYXRlXCIsIGd1aWxkID0+IHtcclxuICAgIHZhciBmb3VuZCA9IGZhbHNlO1xyXG4gICAgZ3VpbGQuY2hhbm5lbHMuY2FjaGUuZWFjaChmdW5jdGlvbihjaGFubmVsLCBpZCkge1xyXG4gICAgICAgIGlmKGZvdW5kID09IHRydWUgfHwgY2hhbm5lbC50eXBlICE9IFwidGV4dFwiKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGd1aWxkLm1lLnBlcm1pc3Npb25zSW4oY2hhbm5lbCkuaGFzKFwiU0VORF9NRVNTQUdFU1wiKSAmJiBndWlsZC5tZS5wZXJtaXNzaW9uc0luKGNoYW5uZWwpLmhhcyhcIlZJRVdfQ0hBTk5FTFwiKSkge1xyXG4gICAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgICAgcmV0dXJuIGNoYW5uZWwuc2VuZChcIlRoYW5rcyBmb3IgdGhlIGludml0YXRpb24hIFRlbGwgdGhlIHNlcnZlciBvd25lciB0byBkbyBcXFwiZHkhc2V0dXBcXFwiIHRvIGdlbmVyYXRlIHRoZSBhZG1pbiBhbmQgbW9kZXJhdG9yIHJvbGVzLiBcXFxyXG4gICAgICAgICAgVGhlIGJvdCdzIG1vZGVyYXRpb24gc3lzdGVtIHdvbid0IHdvcmsgd2l0aG91dCB0aGVtIVxcbihQLlM6IFlvdSBjYW4gdHlwZSBcXFwiZHkhaGVscFxcXCIgYWZ0ZXIgdG8gc2VlIHdoYXQgSSdtIGFsbCBhYm91dClcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuICB9KTtcclxuXHJcbmluZGV4LmluaXRpYWxpemUoYm90KTtcclxuYm90LmxvZ2luKHByb2Nlc3MuZW52LlRPS0VOKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "Discord",
        "require",
        "bot",
        "Client",
        "partials",
        "presets",
        "config",
        "on",
        "console",
        "log",
        "msg",
        "whatever",
        "inputhandle",
        "guild",
        "found",
        "channels",
        "cache",
        "each",
        "channel",
        "id",
        "type",
        "me",
        "permissionsIn",
        "has",
        "send",
        "index",
        "initialize",
        "login",
        "process",
        "env",
        "TOKEN"
      ],
      "mappings": ";;AASA;;AACA;;AAVC,YAAD;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAMC,GAAG,GAAG,IAAIF,OAAO,CAACG,MAAZ,CAAmB;AAC7BC,EAAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB;AADmB,CAAnB,CAAZ;;AAIAH,OAAO,CAAC,iBAAD,CAAP,CAA2B;AAACI,EAAAA,OAAO,EAAE,CAAC,mBAAD;AAAV,CAA3B;;AACAJ,OAAO,CAAC,QAAD,CAAP,CAAkBK,MAAlB;;AAKAJ,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,CAFD;AAIAP,GAAG,CAACK,EAAJ,CAAO,SAAP,EAAkB,UAAAG,GAAG,EAAI;AACrB;AACAC,oBAASC,WAAT,CAAqBF,GAArB,EAAyBR,GAAzB;AACH,CAHD;AAKAA,GAAG,CAACK,EAAJ,CAAO,aAAP,EAAsB,UAAAM,KAAK,EAAI;AAC3B,MAAIC,KAAK,GAAG,KAAZ;AACAD,EAAAA,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0B,UAASC,OAAT,EAAkBC,EAAlB,EAAsB;AAC5C,QAAGL,KAAK,IAAI,IAAT,IAAiBI,OAAO,CAACE,IAAR,IAAgB,MAApC,EAA4C;AAC1C;AACD;;AACD,QAAGP,KAAK,CAACQ,EAAN,CAASC,aAAT,CAAuBJ,OAAvB,EAAgCK,GAAhC,CAAoC,eAApC,KAAwDV,KAAK,CAACQ,EAAN,CAASC,aAAT,CAAuBJ,OAAvB,EAAgCK,GAAhC,CAAoC,cAApC,CAA3D,EAAgH;AAC9GT,MAAAA,KAAK,GAAG,IAAR;AACA,aAAOI,OAAO,CAACM,IAAR,CAAa;AAC9B,gIADiB,CAAP;AAED;AACJ,GATD;AAUD,CAZH;;AAcAC,aAAMC,UAAN,CAAiBxB,GAAjB;;AACAA,GAAG,CAACyB,KAAJ,CAAUC,OAAO,CAACC,GAAR,CAAYC,KAAtB",
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\",
      "sourcesContent": [
        "('use strict');\r\nconst Discord = require(\"discord.js\");\r\nconst bot = new Discord.Client({\r\n  partials: ['MESSAGE', 'CHANNEL', 'REACTION']\r\n});\r\n\r\nrequire('@babel/register')({presets: ['@babel/preset-env']});\r\nrequire('dotenv').config();\r\n\r\nimport {whatever} from './modules/basic/handler.js';\r\nimport {index} from './modules/basic/index.js';\r\n\r\nbot.on('ready', () => {\r\n  console.log('loaded');\r\n});\r\n\r\nbot.on('message', msg => {\r\n    //custom.parsem(msg)\r\n    whatever.inputhandle(msg,bot);\r\n});\r\n\r\nbot.on(\"guildCreate\", guild => {\r\n    var found = false;\r\n    guild.channels.cache.each(function(channel, id) {\r\n        if(found == true || channel.type != \"text\") {\r\n          return;\r\n        }\r\n        if(guild.me.permissionsIn(channel).has(\"SEND_MESSAGES\") && guild.me.permissionsIn(channel).has(\"VIEW_CHANNEL\")) {\r\n          found = true;\r\n          return channel.send(\"Thanks for the invitation! Tell the server owner to do \\\"dy!setup\\\" to generate the admin and moderator roles. \\\r\n          The bot's moderation system won't work without them!\\n(P.S: You can type \\\"dy!help\\\" after to see what I'm all about)\");\r\n        }\r\n    })\r\n  });\r\n\r\nindex.initialize(bot);\r\nbot.login(process.env.TOKEN);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1626912329241
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\basic\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"filename\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\basic\\\\handler.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\handler.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\handler.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\handler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
        "sourceFileName": "handler.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.whatever = void 0;\n\nvar _index = require(\"./index.js\");\n\nvar _permissions = require(\"../security/permissions.js\");\n\nvar _config = require(\"../../config/config.js\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar SelfReloadJSON = require('self-reload-json');\n\nvar servers = new SelfReloadJSON('././storage/servers.json');\n\nvar regeratorRuntime = require('regenerator-runtime');\n\nvar whatever = {};\nexports.whatever = whatever;\n\nwhatever.inputhandle = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(m, bot) {\n    var command, params;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(m.author.id === bot.id || m.channel.type != \"text\")) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            command = m.content.split(\" \")[0].slice(_config.config.prefix.length);\n            params = m.content.split(\" \").slice(1);\n\n            if (!m.content.startsWith(_config.config.prefix)) {\n              _context.next = 14;\n              break;\n            }\n\n            if (_index.commands[command]) {\n              _context.next = 8;\n              break;\n            }\n\n            console.log('that command doesnt exist');\n            return _context.abrupt(\"return\");\n\n          case 8:\n            if (_permissions.permissions.handle(m, command, bot)) {\n              _context.next = 11;\n              break;\n            }\n\n            m.reply('no permissions');\n            return _context.abrupt(\"return\");\n\n          case 11:\n            _index.commands[command][\"function\"](m, params, bot);\n\n            _context.next = 15;\n            break;\n\n          case 14:\n            return _context.abrupt(\"return\");\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nwhatever.embedg = function (i, c, t, d, n, e, f) {\n  switch (i) {\n    case 0:\n      //basic embed\n      var be = {\n        \"title\": \"[dmys] - \" + t,\n        \"description\": d,\n        \"color\": c,\n        \"footer\": {\n          \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\n          \"text\": \"[dmys]\"\n        },\n        \"fields\": [{\n          \"name\": n,\n          \"value\": \"```\" + e + \"```\",\n          \"inline\": true\n        }]\n      };\n      return be;\n      break;\n\n    case 1:\n      var embed = {\n        \"title\": \"[dmys] - \" + t,\n        \"description\": d,\n        \"color\": c,\n        \"footer\": {\n          \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\n          \"text\": f\n        },\n        \"fields\": [{\n          \"name\": n,\n          \"value\": \"```\" + e + \"```\",\n          \"inline\": true\n        }]\n      };\n      return embed;\n      break;\n\n    case 2:\n      var fair = {\n        \"title\": \"[dmys] - \" + t,\n        \"description\": d,\n        \"color\": c,\n        \"footer\": {\n          \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\n          \"text\": \"[dmys]\"\n        }\n      };\n      return fair;\n      break;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXIuanMiXSwibmFtZXMiOlsiU2VsZlJlbG9hZEpTT04iLCJyZXF1aXJlIiwic2VydmVycyIsInJlZ2VyYXRvclJ1bnRpbWUiLCJ3aGF0ZXZlciIsImlucHV0aGFuZGxlIiwibSIsImJvdCIsImF1dGhvciIsImlkIiwiY2hhbm5lbCIsInR5cGUiLCJjb21tYW5kIiwiY29udGVudCIsInNwbGl0Iiwic2xpY2UiLCJjb25maWciLCJwcmVmaXgiLCJsZW5ndGgiLCJwYXJhbXMiLCJzdGFydHNXaXRoIiwiY29tbWFuZHMiLCJjb25zb2xlIiwibG9nIiwicGVybWlzc2lvbnMiLCJoYW5kbGUiLCJyZXBseSIsImVtYmVkZyIsImkiLCJjIiwidCIsImQiLCJuIiwiZSIsImYiLCJiZSIsImVtYmVkIiwiZmFpciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFJQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFDQSxJQUFJQyxPQUFPLEdBQUcsSUFBSUYsY0FBSixDQUFtQiwwQkFBbkIsQ0FBZDs7QUFDQSxJQUFJRyxnQkFBZ0IsR0FBR0YsT0FBTyxDQUFDLHFCQUFELENBQTlCOztBQUdBLElBQUlHLFFBQVEsR0FBRyxFQUFmOzs7QUFDQUEsUUFBUSxDQUFDQyxXQUFUO0FBQUEscUVBQXVCLGlCQUFlQyxDQUFmLEVBQWlCQyxHQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFDaEJELENBQUMsQ0FBQ0UsTUFBRixDQUFTQyxFQUFULEtBQWNGLEdBQUcsQ0FBQ0UsRUFBbEIsSUFBd0JILENBQUMsQ0FBQ0ksT0FBRixDQUFVQyxJQUFWLElBQWtCLE1BRDFCO0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBSWZDLFlBQUFBLE9BSmUsR0FJTE4sQ0FBQyxDQUFDTyxPQUFGLENBQVVDLEtBQVYsQ0FBZ0IsR0FBaEIsRUFBcUIsQ0FBckIsRUFBd0JDLEtBQXhCLENBQThCQyxlQUFPQyxNQUFQLENBQWNDLE1BQTVDLENBSks7QUFLZkMsWUFBQUEsTUFMZSxHQUtOYixDQUFDLENBQUNPLE9BQUYsQ0FBVUMsS0FBVixDQUFnQixHQUFoQixFQUFxQkMsS0FBckIsQ0FBMkIsQ0FBM0IsQ0FMTTs7QUFBQSxpQkFNaEJULENBQUMsQ0FBQ08sT0FBRixDQUFVTyxVQUFWLENBQXFCSixlQUFPQyxNQUE1QixDQU5nQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxnQkFPWkksZ0JBQVNULE9BQVQsQ0FQWTtBQUFBO0FBQUE7QUFBQTs7QUFPT1UsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFQUDs7QUFBQTtBQUFBLGdCQVFaQyx5QkFBWUMsTUFBWixDQUFtQm5CLENBQW5CLEVBQXFCTSxPQUFyQixFQUE2QkwsR0FBN0IsQ0FSWTtBQUFBO0FBQUE7QUFBQTs7QUFRd0JELFlBQUFBLENBQUMsQ0FBQ29CLEtBQUYsQ0FBUSxnQkFBUjtBQVJ4Qjs7QUFBQTtBQVNoQkwsNEJBQVNULE9BQVQsY0FBMkJOLENBQTNCLEVBQTZCYSxNQUE3QixFQUFvQ1osR0FBcEM7O0FBVGdCO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF2Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFjQUgsUUFBUSxDQUFDdUIsTUFBVCxHQUFrQixVQUFTQyxDQUFULEVBQVdDLENBQVgsRUFBYUMsQ0FBYixFQUFlQyxDQUFmLEVBQWlCQyxDQUFqQixFQUFtQkMsQ0FBbkIsRUFBcUJDLENBQXJCLEVBQXVCO0FBQ3JDLFVBQU9OLENBQVA7QUFDSSxTQUFLLENBQUw7QUFBUTtBQUNKLFVBQU1PLEVBQUUsR0FBRztBQUNQLGlCQUFTLGNBQWNMLENBRGhCO0FBRVAsdUJBQWVDLENBRlI7QUFHUCxpQkFBU0YsQ0FIRjtBQUlQLGtCQUFVO0FBQ1Isc0JBQVksZ0RBREo7QUFFUixrQkFBUTtBQUZBLFNBSkg7QUFRUCxrQkFBVSxDQUFDO0FBQ1Asa0JBQVFHLENBREQ7QUFFUCxtQkFBUSxRQUFPQyxDQUFQLEdBQVUsS0FGWDtBQUdQLG9CQUFVO0FBSEgsU0FBRDtBQVJILE9BQVg7QUFjRSxhQUFPRSxFQUFQO0FBQ0Y7O0FBQ0osU0FBSyxDQUFMO0FBQ0ksVUFBTUMsS0FBSyxHQUFHO0FBQ1YsaUJBQVMsY0FBY04sQ0FEYjtBQUVWLHVCQUFlQyxDQUZMO0FBR1YsaUJBQVNGLENBSEM7QUFJVixrQkFBVTtBQUNSLHNCQUFZLGdEQURKO0FBRVIsa0JBQVFLO0FBRkEsU0FKQTtBQVFWLGtCQUFVLENBQUM7QUFDUCxrQkFBUUYsQ0FERDtBQUVQLG1CQUFRLFFBQU9DLENBQVAsR0FBVSxLQUZYO0FBR1Asb0JBQVU7QUFISCxTQUFEO0FBUkEsT0FBZDtBQWNFLGFBQU9HLEtBQVA7QUFDRjs7QUFDSixTQUFLLENBQUw7QUFDSSxVQUFNQyxJQUFJLEdBQUc7QUFDVCxpQkFBUyxjQUFjUCxDQURkO0FBRVQsdUJBQWVDLENBRk47QUFHVCxpQkFBU0YsQ0FIQTtBQUlULGtCQUFVO0FBQ1Isc0JBQVksZ0RBREo7QUFFUixrQkFBUTtBQUZBO0FBSkQsT0FBYjtBQVNFLGFBQU9RLElBQVA7QUFDRjtBQTlDUjtBQWdESCxDQWpERCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGJmaWNtXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxWU0dpdGh1YlxcZGJvdFxcbW9kdWxlc1xcYmFzaWNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y29tbWFuZHN9IGZyb20gJy4vaW5kZXguanMnXHJcbmltcG9ydCB7cGVybWlzc2lvbnN9IGZyb20gJy4uL3NlY3VyaXR5L3Blcm1pc3Npb25zLmpzJ1xyXG5pbXBvcnQge2NvbmZpZ30gZnJvbSAnLi4vLi4vY29uZmlnL2NvbmZpZy5qcydcclxuXHJcbnZhciBTZWxmUmVsb2FkSlNPTiA9IHJlcXVpcmUoJ3NlbGYtcmVsb2FkLWpzb24nKTtcclxubGV0IHNlcnZlcnMgPSBuZXcgU2VsZlJlbG9hZEpTT04oJy4vLi9zdG9yYWdlL3NlcnZlcnMuanNvbicpO1xyXG52YXIgcmVnZXJhdG9yUnVudGltZSA9IHJlcXVpcmUoJ3JlZ2VuZXJhdG9yLXJ1bnRpbWUnKVxyXG5cclxuXHJcbmxldCB3aGF0ZXZlciA9IHt9O1xyXG53aGF0ZXZlci5pbnB1dGhhbmRsZSA9IGFzeW5jIGZ1bmN0aW9uKG0sYm90KXtcclxuICAgIGlmKG0uYXV0aG9yLmlkPT09Ym90LmlkIHx8IG0uY2hhbm5lbC50eXBlICE9IFwidGV4dFwiKVxyXG4gICAgICB7cmV0dXJufVxyXG4gICAgXHJcbiAgICB2YXIgY29tbWFuZCA9IG0uY29udGVudC5zcGxpdChcIiBcIilbMF0uc2xpY2UoY29uZmlnLnByZWZpeC5sZW5ndGgpO1xyXG4gICAgdmFyIHBhcmFtcyA9IG0uY29udGVudC5zcGxpdChcIiBcIikuc2xpY2UoMSk7XHJcbiAgICBpZihtLmNvbnRlbnQuc3RhcnRzV2l0aChjb25maWcucHJlZml4KSl7XHJcbiAgICAgICBpZighY29tbWFuZHNbY29tbWFuZF0pe2NvbnNvbGUubG9nKCd0aGF0IGNvbW1hbmQgZG9lc250IGV4aXN0Jyk7IHJldHVybn1cclxuICAgICAgIGlmKCFwZXJtaXNzaW9ucy5oYW5kbGUobSxjb21tYW5kLGJvdCkpeyBtLnJlcGx5KCdubyBwZXJtaXNzaW9ucycpOyByZXR1cm59XHJcbiAgICAgICBjb21tYW5kc1tjb21tYW5kXS5mdW5jdGlvbihtLHBhcmFtcyxib3QpO1xyXG4gICAgfVxyXG4gICAgZWxzZSByZXR1cm5cclxufVxyXG5cclxud2hhdGV2ZXIuZW1iZWRnID0gZnVuY3Rpb24oaSxjLHQsZCxuLGUsZil7XHJcbiAgICBzd2l0Y2goaSl7XHJcbiAgICAgICAgY2FzZSAwOiAvL2Jhc2ljIGVtYmVkXHJcbiAgICAgICAgICAgIGNvbnN0IGJlID0ge1xyXG4gICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIltkbXlzXSAtIFwiICsgdCxcclxuICAgICAgICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogZCxcclxuICAgICAgICAgICAgICAgIFwiY29sb3JcIjogYyxcclxuICAgICAgICAgICAgICAgIFwiZm9vdGVyXCI6IHtcclxuICAgICAgICAgICAgICAgICAgXCJpY29uX3VybFwiOiBcImh0dHBzOi8vY2RuLmRpc2NvcmRhcHAuY29tL2VtYmVkL2F2YXRhcnMvMC5wbmdcIixcclxuICAgICAgICAgICAgICAgICAgXCJ0ZXh0XCI6IFwiW2RteXNdXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBcImZpZWxkc1wiOiBbe1xyXG4gICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBuLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmFsdWVcIjpcImBgYFwiKyBlICtcImBgYFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiaW5saW5lXCI6IHRydWVcclxuICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICByZXR1cm4gYmVcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICBjb25zdCBlbWJlZCA9IHtcclxuICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCJbZG15c10gLSBcIiArIHQsXHJcbiAgICAgICAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IGQsXHJcbiAgICAgICAgICAgICAgICBcImNvbG9yXCI6IGMsXHJcbiAgICAgICAgICAgICAgICBcImZvb3RlclwiOiB7XHJcbiAgICAgICAgICAgICAgICAgIFwiaWNvbl91cmxcIjogXCJodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9lbWJlZC9hdmF0YXJzLzAucG5nXCIsXHJcbiAgICAgICAgICAgICAgICAgIFwidGV4dFwiOiBmXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgXCJmaWVsZHNcIjogW3tcclxuICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogbixcclxuICAgICAgICAgICAgICAgICAgICBcInZhbHVlXCI6XCJgYGBcIisgZSArXCJgYGBcIixcclxuICAgICAgICAgICAgICAgICAgICBcImlubGluZVwiOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIHJldHVybiBlbWJlZFxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIGNvbnN0IGZhaXIgPSB7XHJcbiAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiW2RteXNdIC0gXCIgKyB0LFxyXG4gICAgICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBkLFxyXG4gICAgICAgICAgICAgICAgXCJjb2xvclwiOiBjLFxyXG4gICAgICAgICAgICAgICAgXCJmb290ZXJcIjoge1xyXG4gICAgICAgICAgICAgICAgICBcImljb25fdXJsXCI6IFwiaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vZW1iZWQvYXZhdGFycy8wLnBuZ1wiLFxyXG4gICAgICAgICAgICAgICAgICBcInRleHRcIjogXCJbZG15c11cIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGZhaXJcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9IFxyXG59XHJcbmV4cG9ydHsgd2hhdGV2ZXIgfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "handler.js"
      ],
      "names": [
        "SelfReloadJSON",
        "require",
        "servers",
        "regeratorRuntime",
        "whatever",
        "inputhandle",
        "m",
        "bot",
        "author",
        "id",
        "channel",
        "type",
        "command",
        "content",
        "split",
        "slice",
        "config",
        "prefix",
        "length",
        "params",
        "startsWith",
        "commands",
        "console",
        "log",
        "permissions",
        "handle",
        "reply",
        "embedg",
        "i",
        "c",
        "t",
        "d",
        "n",
        "e",
        "f",
        "be",
        "embed",
        "fair"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,OAAO,GAAG,IAAIF,cAAJ,CAAmB,0BAAnB,CAAd;;AACA,IAAIG,gBAAgB,GAAGF,OAAO,CAAC,qBAAD,CAA9B;;AAGA,IAAIG,QAAQ,GAAG,EAAf;;;AACAA,QAAQ,CAACC,WAAT;AAAA,qEAAuB,iBAAeC,CAAf,EAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChBD,CAAC,CAACE,MAAF,CAASC,EAAT,KAAcF,GAAG,CAACE,EAAlB,IAAwBH,CAAC,CAACI,OAAF,CAAUC,IAAV,IAAkB,MAD1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIfC,YAAAA,OAJe,GAILN,CAAC,CAACO,OAAF,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAAwBC,KAAxB,CAA8BC,eAAOC,MAAP,CAAcC,MAA5C,CAJK;AAKfC,YAAAA,MALe,GAKNb,CAAC,CAACO,OAAF,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,KAArB,CAA2B,CAA3B,CALM;;AAAA,iBAMhBT,CAAC,CAACO,OAAF,CAAUO,UAAV,CAAqBJ,eAAOC,MAA5B,CANgB;AAAA;AAAA;AAAA;;AAAA,gBAOZI,gBAAST,OAAT,CAPY;AAAA;AAAA;AAAA;;AAOOU,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAPP;;AAAA;AAAA,gBAQZC,yBAAYC,MAAZ,CAAmBnB,CAAnB,EAAqBM,OAArB,EAA6BL,GAA7B,CARY;AAAA;AAAA;AAAA;;AAQwBD,YAAAA,CAAC,CAACoB,KAAF,CAAQ,gBAAR;AARxB;;AAAA;AAShBL,4BAAST,OAAT,cAA2BN,CAA3B,EAA6Ba,MAA7B,EAAoCZ,GAApC;;AATgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAcAH,QAAQ,CAACuB,MAAT,GAAkB,UAASC,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiBC,CAAjB,EAAmBC,CAAnB,EAAqBC,CAArB,EAAuB;AACrC,UAAON,CAAP;AACI,SAAK,CAAL;AAAQ;AACJ,UAAMO,EAAE,GAAG;AACP,iBAAS,cAAcL,CADhB;AAEP,uBAAeC,CAFR;AAGP,iBAASF,CAHF;AAIP,kBAAU;AACR,sBAAY,gDADJ;AAER,kBAAQ;AAFA,SAJH;AAQP,kBAAU,CAAC;AACP,kBAAQG,CADD;AAEP,mBAAQ,QAAOC,CAAP,GAAU,KAFX;AAGP,oBAAU;AAHH,SAAD;AARH,OAAX;AAcE,aAAOE,EAAP;AACF;;AACJ,SAAK,CAAL;AACI,UAAMC,KAAK,GAAG;AACV,iBAAS,cAAcN,CADb;AAEV,uBAAeC,CAFL;AAGV,iBAASF,CAHC;AAIV,kBAAU;AACR,sBAAY,gDADJ;AAER,kBAAQK;AAFA,SAJA;AAQV,kBAAU,CAAC;AACP,kBAAQF,CADD;AAEP,mBAAQ,QAAOC,CAAP,GAAU,KAFX;AAGP,oBAAU;AAHH,SAAD;AARA,OAAd;AAcE,aAAOG,KAAP;AACF;;AACJ,SAAK,CAAL;AACI,UAAMC,IAAI,GAAG;AACT,iBAAS,cAAcP,CADd;AAET,uBAAeC,CAFN;AAGT,iBAASF,CAHA;AAIT,kBAAU;AACR,sBAAY,gDADJ;AAER,kBAAQ;AAFA;AAJD,OAAb;AASE,aAAOQ,IAAP;AACF;AA9CR;AAgDH,CAjDD",
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
      "sourcesContent": [
        "import {commands} from './index.js'\r\nimport {permissions} from '../security/permissions.js'\r\nimport {config} from '../../config/config.js'\r\n\r\nvar SelfReloadJSON = require('self-reload-json');\r\nlet servers = new SelfReloadJSON('././storage/servers.json');\r\nvar regeratorRuntime = require('regenerator-runtime')\r\n\r\n\r\nlet whatever = {};\r\nwhatever.inputhandle = async function(m,bot){\r\n    if(m.author.id===bot.id || m.channel.type != \"text\")\r\n      {return}\r\n    \r\n    var command = m.content.split(\" \")[0].slice(config.prefix.length);\r\n    var params = m.content.split(\" \").slice(1);\r\n    if(m.content.startsWith(config.prefix)){\r\n       if(!commands[command]){console.log('that command doesnt exist'); return}\r\n       if(!permissions.handle(m,command,bot)){ m.reply('no permissions'); return}\r\n       commands[command].function(m,params,bot);\r\n    }\r\n    else return\r\n}\r\n\r\nwhatever.embedg = function(i,c,t,d,n,e,f){\r\n    switch(i){\r\n        case 0: //basic embed\r\n            const be = {\r\n                \"title\": \"[dmys] - \" + t,\r\n                \"description\": d,\r\n                \"color\": c,\r\n                \"footer\": {\r\n                  \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\r\n                  \"text\": \"[dmys]\"\r\n                },\r\n                \"fields\": [{\r\n                    \"name\": n,\r\n                    \"value\":\"```\"+ e +\"```\",\r\n                    \"inline\": true\r\n                }]\r\n              };\r\n              return be\r\n            break;\r\n        case 1:\r\n            const embed = {\r\n                \"title\": \"[dmys] - \" + t,\r\n                \"description\": d,\r\n                \"color\": c,\r\n                \"footer\": {\r\n                  \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\r\n                  \"text\": f\r\n                },\r\n                \"fields\": [{\r\n                    \"name\": n,\r\n                    \"value\":\"```\"+ e +\"```\",\r\n                    \"inline\": true\r\n                }],\r\n              };\r\n              return embed\r\n            break;\r\n        case 2:\r\n            const fair = {\r\n                \"title\": \"[dmys] - \" + t,\r\n                \"description\": d,\r\n                \"color\": c,\r\n                \"footer\": {\r\n                  \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\r\n                  \"text\": \"[dmys]\"\r\n                }\r\n              };\r\n              return fair\r\n            break;\r\n    } \r\n}\r\nexport{ whatever }"
      ]
    },
    "sourceType": "script",
    "mtime": 1626275819213
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\basic\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"filename\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\basic\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commands = exports.index = void 0;\n\nvar _config = require(\"../../config/config.js\");\n\nvar fs = require('fs');\n\nvar modules = _config.config.modules;\nvar index = {};\nexports.index = index;\nvar commands = [];\nexports.commands = commands;\n\nindex.initialize = function (v) {\n  var _loop = function _loop() {\n    var cat = modules[i];\n    fs.readdir(\"./modules/\".concat(cat), function (err, files) {\n      if (err) throw err;\n      files.forEach(function (file) {\n        if (file === \"index.js\" || file === \"handler.js\" || file === \"custom.js\" || file === \"permissions.js\") return;\n\n        var reqfile = require(\"../\".concat(cat, \"/\").concat(file));\n\n        Object.keys(reqfile).forEach(function (zzz) {\n          var trap = Object.keys(reqfile[zzz]).length; //console.log(`${zzz} has ` + trap)\n\n          for (var l = 0; l < trap; l++) {\n            var command = Object.keys(reqfile[zzz])[l];\n            var commandvalue = reqfile[zzz][command];\n            commands[command] = commandvalue;\n            console.log(\"command: \" + command);\n          }\n        });\n      });\n    });\n  };\n\n  for (var i = 0; i < modules.length; i++) {\n    _loop();\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1vZHVsZXMiLCJjb25maWciLCJpbmRleCIsImNvbW1hbmRzIiwiaW5pdGlhbGl6ZSIsInYiLCJjYXQiLCJpIiwicmVhZGRpciIsImVyciIsImZpbGVzIiwiZm9yRWFjaCIsImZpbGUiLCJyZXFmaWxlIiwiT2JqZWN0Iiwia2V5cyIsInp6eiIsInRyYXAiLCJsZW5ndGgiLCJsIiwiY29tbWFuZCIsImNvbW1hbmR2YWx1ZSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFEQSxJQUFJQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWhCOztBQUlBLElBQUlDLE9BQU8sR0FBR0MsZUFBT0QsT0FBckI7QUFFQSxJQUFJRSxLQUFLLEdBQUcsRUFBWjs7QUFFQSxJQUFJQyxRQUFRLEdBQUcsRUFBZjs7O0FBRUFELEtBQUssQ0FBQ0UsVUFBTixHQUFtQixVQUFTQyxDQUFULEVBQVc7QUFBQTtBQUV0QixRQUFJQyxHQUFHLEdBQUdOLE9BQU8sQ0FBQ08sQ0FBRCxDQUFqQjtBQUNBVCxJQUFBQSxFQUFFLENBQUNVLE9BQUgscUJBQXdCRixHQUF4QixHQUE4QixVQUFTRyxHQUFULEVBQWFDLEtBQWIsRUFBbUI7QUFDN0MsVUFBR0QsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUkMsTUFBQUEsS0FBSyxDQUFDQyxPQUFOLENBQWMsVUFBU0MsSUFBVCxFQUFjO0FBQ3hCLFlBQUdBLElBQUksS0FBSyxVQUFULElBQXVCQSxJQUFJLEtBQUssWUFBaEMsSUFBZ0RBLElBQUksS0FBSyxXQUF6RCxJQUF3RUEsSUFBSSxLQUFLLGdCQUFwRixFQUFzRzs7QUFDdEcsWUFBSUMsT0FBTyxHQUFHZCxPQUFPLGNBQU9PLEdBQVAsY0FBY00sSUFBZCxFQUFyQjs7QUFDQUUsUUFBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVlGLE9BQVosRUFBcUJGLE9BQXJCLENBQTZCLFVBQUNLLEdBQUQsRUFBTztBQUNoQyxjQUFJQyxJQUFJLEdBQUdILE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixPQUFPLENBQUNHLEdBQUQsQ0FBbkIsRUFBMEJFLE1BQXJDLENBRGdDLENBRWhDOztBQUNELGVBQUksSUFBSUMsQ0FBQyxHQUFDLENBQVYsRUFBWUEsQ0FBQyxHQUFDRixJQUFkLEVBQW1CRSxDQUFDLEVBQXBCLEVBQXVCO0FBQ2xCLGdCQUFJQyxPQUFPLEdBQUdOLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixPQUFPLENBQUNHLEdBQUQsQ0FBbkIsRUFBMEJHLENBQTFCLENBQWQ7QUFDQSxnQkFBSUUsWUFBWSxHQUFHUixPQUFPLENBQUNHLEdBQUQsQ0FBUCxDQUFhSSxPQUFiLENBQW5CO0FBQ0FqQixZQUFBQSxRQUFRLENBQUNpQixPQUFELENBQVIsR0FBa0JDLFlBQWxCO0FBQ0FDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNILE9BQTFCO0FBQ0o7QUFDSCxTQVREO0FBVUgsT0FiRDtBQWNILEtBaEJEO0FBSHNCOztBQUMxQixPQUFJLElBQUliLENBQUMsR0FBQyxDQUFWLEVBQVlBLENBQUMsR0FBQ1AsT0FBTyxDQUFDa0IsTUFBdEIsRUFBNkJYLENBQUMsRUFBOUIsRUFBaUM7QUFBQTtBQW1CaEM7QUFDSixDQXJCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGJmaWNtXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxWU0dpdGh1YlxcZGJvdFxcbW9kdWxlc1xcYmFzaWNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcbmltcG9ydCB7Y29uZmlnfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnLmpzJ1xyXG5cclxuXHJcbmxldCBtb2R1bGVzID0gY29uZmlnLm1vZHVsZXNcclxuXHJcbmxldCBpbmRleCA9IHt9XHJcblxyXG52YXIgY29tbWFuZHMgPSBbXVxyXG5cclxuaW5kZXguaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKHYpe1xyXG4gICAgZm9yKHZhciBpPTA7aTxtb2R1bGVzLmxlbmd0aDtpKyspe1xyXG4gICAgICAgIGxldCBjYXQgPSBtb2R1bGVzW2ldO1xyXG4gICAgICAgIGZzLnJlYWRkaXIoYC4vbW9kdWxlcy8ke2NhdH1gLGZ1bmN0aW9uKGVycixmaWxlcyl7XHJcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICAgICAgICBmaWxlcy5mb3JFYWNoKGZ1bmN0aW9uKGZpbGUpe1xyXG4gICAgICAgICAgICAgICAgaWYoZmlsZSA9PT0gXCJpbmRleC5qc1wiIHx8IGZpbGUgPT09IFwiaGFuZGxlci5qc1wiIHx8IGZpbGUgPT09IFwiY3VzdG9tLmpzXCIgfHwgZmlsZSA9PT0gXCJwZXJtaXNzaW9ucy5qc1wiKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVxZmlsZSA9IHJlcXVpcmUoYC4uLyR7Y2F0fS8ke2ZpbGV9YCk7XHJcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhyZXFmaWxlKS5mb3JFYWNoKCh6enopPT57XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRyYXAgPSBPYmplY3Qua2V5cyhyZXFmaWxlW3p6el0pLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGAke3p6en0gaGFzIGAgKyB0cmFwKVxyXG4gICAgICAgICAgICAgICAgICAgZm9yKHZhciBsPTA7bDx0cmFwO2wrKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb21tYW5kID0gT2JqZWN0LmtleXMocmVxZmlsZVt6enpdKVtsXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvbW1hbmR2YWx1ZSA9IHJlcWZpbGVbenp6XVtjb21tYW5kXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29tbWFuZHNbY29tbWFuZF09Y29tbWFuZHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImNvbW1hbmQ6IFwiICsgY29tbWFuZCk7XHJcbiAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge2luZGV4LGNvbW1hbmRzfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "modules",
        "config",
        "index",
        "commands",
        "initialize",
        "v",
        "cat",
        "i",
        "readdir",
        "err",
        "files",
        "forEach",
        "file",
        "reqfile",
        "Object",
        "keys",
        "zzz",
        "trap",
        "length",
        "l",
        "command",
        "commandvalue",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;AADA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAIA,IAAIC,OAAO,GAAGC,eAAOD,OAArB;AAEA,IAAIE,KAAK,GAAG,EAAZ;;AAEA,IAAIC,QAAQ,GAAG,EAAf;;;AAEAD,KAAK,CAACE,UAAN,GAAmB,UAASC,CAAT,EAAW;AAAA;AAEtB,QAAIC,GAAG,GAAGN,OAAO,CAACO,CAAD,CAAjB;AACAT,IAAAA,EAAE,CAACU,OAAH,qBAAwBF,GAAxB,GAA8B,UAASG,GAAT,EAAaC,KAAb,EAAmB;AAC7C,UAAGD,GAAH,EAAQ,MAAMA,GAAN;AACRC,MAAAA,KAAK,CAACC,OAAN,CAAc,UAASC,IAAT,EAAc;AACxB,YAAGA,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,YAAhC,IAAgDA,IAAI,KAAK,WAAzD,IAAwEA,IAAI,KAAK,gBAApF,EAAsG;;AACtG,YAAIC,OAAO,GAAGd,OAAO,cAAOO,GAAP,cAAcM,IAAd,EAArB;;AACAE,QAAAA,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBF,OAArB,CAA6B,UAACK,GAAD,EAAO;AAChC,cAAIC,IAAI,GAAGH,MAAM,CAACC,IAAP,CAAYF,OAAO,CAACG,GAAD,CAAnB,EAA0BE,MAArC,CADgC,CAEhC;;AACD,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,IAAd,EAAmBE,CAAC,EAApB,EAAuB;AAClB,gBAAIC,OAAO,GAAGN,MAAM,CAACC,IAAP,CAAYF,OAAO,CAACG,GAAD,CAAnB,EAA0BG,CAA1B,CAAd;AACA,gBAAIE,YAAY,GAAGR,OAAO,CAACG,GAAD,CAAP,CAAaI,OAAb,CAAnB;AACAjB,YAAAA,QAAQ,CAACiB,OAAD,CAAR,GAAkBC,YAAlB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAcH,OAA1B;AACJ;AACH,SATD;AAUH,OAbD;AAcH,KAhBD;AAHsB;;AAC1B,OAAI,IAAIb,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,OAAO,CAACkB,MAAtB,EAA6BX,CAAC,EAA9B,EAAiC;AAAA;AAmBhC;AACJ,CArBD",
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
      "sourcesContent": [
        "var fs = require('fs');\r\nimport {config} from '../../config/config.js'\r\n\r\n\r\nlet modules = config.modules\r\n\r\nlet index = {}\r\n\r\nvar commands = []\r\n\r\nindex.initialize = function(v){\r\n    for(var i=0;i<modules.length;i++){\r\n        let cat = modules[i];\r\n        fs.readdir(`./modules/${cat}`,function(err,files){\r\n            if(err) throw err;\r\n            files.forEach(function(file){\r\n                if(file === \"index.js\" || file === \"handler.js\" || file === \"custom.js\" || file === \"permissions.js\") return;\r\n                let reqfile = require(`../${cat}/${file}`);\r\n                Object.keys(reqfile).forEach((zzz)=>{\r\n                    let trap = Object.keys(reqfile[zzz]).length;\r\n                    //console.log(`${zzz} has ` + trap)\r\n                   for(var l=0;l<trap;l++){\r\n                        let command = Object.keys(reqfile[zzz])[l];\r\n                        let commandvalue = reqfile[zzz][command];\r\n                        commands[command]=commandvalue;\r\n                        console.log(\"command: \" + command);\r\n                   }\r\n                })\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport {index,commands}"
      ]
    },
    "sourceType": "script",
    "mtime": 1626912853711
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"filename\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\config\\\\config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\config\\config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\config\\config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\config\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\config\\",
        "sourceFileName": "config.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.config = void 0;\nvar config = {};\nexports.config = config;\nconfig.modules = [\"basic\", \"fun\"];\nconfig.exclude = [\"index.js\", \"handler.js\", \"permissions.js\"];\nconfig.prefix = \"dy!\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJjb25maWciLCJtb2R1bGVzIiwiZXhjbHVkZSIsInByZWZpeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsTUFBTSxHQUFHLEVBQWI7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDLE9BQUQsRUFBUyxLQUFULENBQWpCO0FBQ0FELE1BQU0sQ0FBQ0UsT0FBUCxHQUFpQixDQUFDLFVBQUQsRUFBYSxZQUFiLEVBQTJCLGdCQUEzQixDQUFqQjtBQUNBRixNQUFNLENBQUNHLE1BQVAsR0FBZ0IsS0FBaEIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxiZmljbVxcT25lRHJpdmVcXERvY3VtZW50c1xcVlNHaXRodWJcXGRib3RcXGNvbmZpZ1xcIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGNvbmZpZyA9IHt9XHJcbmNvbmZpZy5tb2R1bGVzID0gW1wiYmFzaWNcIixcImZ1blwiXTtcclxuY29uZmlnLmV4Y2x1ZGUgPSBbXCJpbmRleC5qc1wiLCBcImhhbmRsZXIuanNcIiwgXCJwZXJtaXNzaW9ucy5qc1wiXTtcclxuY29uZmlnLnByZWZpeCA9IFwiZHkhXCI7XHJcblxyXG5leHBvcnQge2NvbmZpZ30iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "config",
        "modules",
        "exclude",
        "prefix"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,MAAM,GAAG,EAAb;;AACAA,MAAM,CAACC,OAAP,GAAiB,CAAC,OAAD,EAAS,KAAT,CAAjB;AACAD,MAAM,CAACE,OAAP,GAAiB,CAAC,UAAD,EAAa,YAAb,EAA2B,gBAA3B,CAAjB;AACAF,MAAM,CAACG,MAAP,GAAgB,KAAhB",
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\config\\",
      "sourcesContent": [
        "let config = {}\r\nconfig.modules = [\"basic\",\"fun\"];\r\nconfig.exclude = [\"index.js\", \"handler.js\", \"permissions.js\"];\r\nconfig.prefix = \"dy!\";\r\n\r\nexport {config}"
      ]
    },
    "sourceType": "script",
    "mtime": 1626911922481
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\security\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"filename\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\security\\\\permissions.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\security\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\security\\permissions.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\security\\permissions.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\security\\permissions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\security\\",
        "sourceFileName": "permissions.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.permissions = void 0;\n\nvar _basic = require(\"../basic\");\n\nvar permissions = {};\nexports.permissions = permissions;\n\nvar SelfReloadJSON = require('self-reload-json');\n\nvar servers = new SelfReloadJSON('././storage/servers.json');\n\npermissions.handle = function (m, c, bot) {\n  // 0: user, 1: moderator, 2: admin, 3: debug\n  if (m.author.id == \"713739988109361222\" || m.author.id == \"217327385912147968\") {\n    return true;\n  }\n\n  switch (_basic.commands[c].permissions) {\n    case 0:\n      return true;\n      break;\n\n    case 1:\n      if (m.member.roles.cache.find(function (role) {\n        return role.id === servers[m.guild.id].modrole;\n      }) || m.member.roles.cache.find(function (role) {\n        return role.name === \"dy!mod\";\n      }) || m.author.id == \"713739988109361222\" || m.author.id == \"217327385912147968\") {\n        return true;\n      } else {\n        return false;\n      }\n\n      break;\n\n    case 2:\n      if (m.member.roles.cache.find(function (role) {\n        return role.id === servers[m.guild.id].adminrole;\n      }) || m.member.roles.cache.find(function (role) {\n        return role.name === \"dy!admin\";\n      }) || m.author.id == \"713739988109361222\" || m.author.id == \"217327385912147968\") {\n        return true;\n      } else {\n        return false;\n      }\n\n      break;\n\n    case 3:\n      if (m.author.id == \"713739988109361222\" || m.author.id == \"217327385912147968\") {\n        return true;\n      } else return false;\n\n      break;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb25zLmpzIl0sIm5hbWVzIjpbInBlcm1pc3Npb25zIiwiU2VsZlJlbG9hZEpTT04iLCJyZXF1aXJlIiwic2VydmVycyIsImhhbmRsZSIsIm0iLCJjIiwiYm90IiwiYXV0aG9yIiwiaWQiLCJjb21tYW5kcyIsIm1lbWJlciIsInJvbGVzIiwiY2FjaGUiLCJmaW5kIiwicm9sZSIsImd1aWxkIiwibW9kcm9sZSIsIm5hbWUiLCJhZG1pbnJvbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFJQSxXQUFXLEdBQUcsRUFBbEI7OztBQUNBLElBQUlDLGNBQWMsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQTVCOztBQUNBLElBQUlDLE9BQU8sR0FBRyxJQUFJRixjQUFKLENBQW1CLDBCQUFuQixDQUFkOztBQUdBRCxXQUFXLENBQUNJLE1BQVosR0FBcUIsVUFBU0MsQ0FBVCxFQUFXQyxDQUFYLEVBQWFDLEdBQWIsRUFBaUI7QUFBRTtBQUNwQyxNQUFHRixDQUFDLENBQUNHLE1BQUYsQ0FBU0MsRUFBVCxJQUFlLG9CQUFmLElBQXdDSixDQUFDLENBQUNHLE1BQUYsQ0FBU0MsRUFBVCxJQUFlLG9CQUExRCxFQUNBO0FBQ0ksV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsVUFBT0MsZ0JBQVNKLENBQVQsRUFBWU4sV0FBbkI7QUFDSSxTQUFLLENBQUw7QUFDSSxhQUFPLElBQVA7QUFDQTs7QUFFSixTQUFLLENBQUw7QUFDSSxVQUFHSyxDQUFDLENBQUNNLE1BQUYsQ0FBU0MsS0FBVCxDQUFlQyxLQUFmLENBQXFCQyxJQUFyQixDQUEwQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDTixFQUFMLEtBQVlOLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDVyxLQUFGLENBQVFQLEVBQVQsQ0FBUCxDQUFvQlEsT0FBcEM7QUFBQSxPQUE5QixLQUE4RVosQ0FBQyxDQUFDTSxNQUFGLENBQVNDLEtBQVQsQ0FBZUMsS0FBZixDQUFxQkMsSUFBckIsQ0FBMEIsVUFBQUMsSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ0csSUFBTCxLQUFjLFFBQWxCO0FBQUEsT0FBOUIsQ0FBOUUsSUFDQ2IsQ0FBQyxDQUFDRyxNQUFGLENBQVNDLEVBQVQsSUFBZSxvQkFEaEIsSUFDeUNKLENBQUMsQ0FBQ0csTUFBRixDQUFTQyxFQUFULElBQWUsb0JBRDNELEVBQ2dGO0FBQzVFLGVBQU8sSUFBUDtBQUNILE9BSEQsTUFJSTtBQUNBLGVBQU8sS0FBUDtBQUNIOztBQUNEOztBQUVKLFNBQUssQ0FBTDtBQUNJLFVBQUdKLENBQUMsQ0FBQ00sTUFBRixDQUFTQyxLQUFULENBQWVDLEtBQWYsQ0FBcUJDLElBQXJCLENBQTBCLFVBQUFDLElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNOLEVBQUwsS0FBWU4sT0FBTyxDQUFDRSxDQUFDLENBQUNXLEtBQUYsQ0FBUVAsRUFBVCxDQUFQLENBQW9CVSxTQUFwQztBQUFBLE9BQTlCLEtBQWdGZCxDQUFDLENBQUNNLE1BQUYsQ0FBU0MsS0FBVCxDQUFlQyxLQUFmLENBQXFCQyxJQUFyQixDQUEwQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDRyxJQUFMLEtBQWMsVUFBbEI7QUFBQSxPQUE5QixDQUFoRixJQUNDYixDQUFDLENBQUNHLE1BQUYsQ0FBU0MsRUFBVCxJQUFlLG9CQURoQixJQUN5Q0osQ0FBQyxDQUFDRyxNQUFGLENBQVNDLEVBQVQsSUFBZSxvQkFEM0QsRUFDaUY7QUFDN0UsZUFBTyxJQUFQO0FBQ0gsT0FIRCxNQUlJO0FBQ0EsZUFBTyxLQUFQO0FBQ0g7O0FBQ0Q7O0FBQ0osU0FBSyxDQUFMO0FBQ0ksVUFBR0osQ0FBQyxDQUFDRyxNQUFGLENBQVNDLEVBQVQsSUFBZSxvQkFBZixJQUF3Q0osQ0FBQyxDQUFDRyxNQUFGLENBQVNDLEVBQVQsSUFBZSxvQkFBMUQsRUFBK0U7QUFDM0UsZUFBTyxJQUFQO0FBQ0gsT0FGRCxNQUdLLE9BQU8sS0FBUDs7QUFDTDtBQTdCUjtBQStCSCxDQXBDRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGJmaWNtXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxWU0dpdGh1YlxcZGJvdFxcbW9kdWxlc1xcc2VjdXJpdHlcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbW1hbmRzIH0gZnJvbSAnLi4vYmFzaWMnO1xyXG5cclxubGV0IHBlcm1pc3Npb25zID0ge31cclxudmFyIFNlbGZSZWxvYWRKU09OID0gcmVxdWlyZSgnc2VsZi1yZWxvYWQtanNvbicpO1xyXG5sZXQgc2VydmVycyA9IG5ldyBTZWxmUmVsb2FkSlNPTignLi8uL3N0b3JhZ2Uvc2VydmVycy5qc29uJyk7XHJcblxyXG5cclxucGVybWlzc2lvbnMuaGFuZGxlID0gZnVuY3Rpb24obSxjLGJvdCl7IC8vIDA6IHVzZXIsIDE6IG1vZGVyYXRvciwgMjogYWRtaW4sIDM6IGRlYnVnXHJcbiAgICBpZihtLmF1dGhvci5pZCA9PSBcIjcxMzczOTk4ODEwOTM2MTIyMlwiICB8fCBtLmF1dGhvci5pZCA9PSBcIjIxNzMyNzM4NTkxMjE0Nzk2OFwiKVxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9XHJcbiAgICBzd2l0Y2goY29tbWFuZHNbY10ucGVybWlzc2lvbnMpe1xyXG4gICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgYnJlYWtcclxuXHJcbiAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICBpZihtLm1lbWJlci5yb2xlcy5jYWNoZS5maW5kKHJvbGUgPT4gcm9sZS5pZCA9PT0gc2VydmVyc1ttLmd1aWxkLmlkXS5tb2Ryb2xlKSB8fCBtLm1lbWJlci5yb2xlcy5jYWNoZS5maW5kKHJvbGUgPT4gcm9sZS5uYW1lID09PSBcImR5IW1vZFwiKSB8fCBcclxuICAgICAgICAgICAgICAgIG0uYXV0aG9yLmlkID09IFwiNzEzNzM5OTg4MTA5MzYxMjIyXCIgIHx8IG0uYXV0aG9yLmlkID09IFwiMjE3MzI3Mzg1OTEyMTQ3OTY4XCIpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWtcclxuXHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICBpZihtLm1lbWJlci5yb2xlcy5jYWNoZS5maW5kKHJvbGUgPT4gcm9sZS5pZCA9PT0gc2VydmVyc1ttLmd1aWxkLmlkXS5hZG1pbnJvbGUpIHx8IG0ubWVtYmVyLnJvbGVzLmNhY2hlLmZpbmQocm9sZSA9PiByb2xlLm5hbWUgPT09IFwiZHkhYWRtaW5cIikgfHxcclxuICAgICAgICAgICAgICAgIG0uYXV0aG9yLmlkID09IFwiNzEzNzM5OTg4MTA5MzYxMjIyXCIgIHx8IG0uYXV0aG9yLmlkID09IFwiMjE3MzI3Mzg1OTEyMTQ3OTY4XCIgKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICBpZihtLmF1dGhvci5pZCA9PSBcIjcxMzczOTk4ODEwOTM2MTIyMlwiICB8fCBtLmF1dGhvci5pZCA9PSBcIjIxNzMyNzM4NTkxMjE0Nzk2OFwiKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgYnJlYWtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHtwZXJtaXNzaW9uc30iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "permissions.js"
      ],
      "names": [
        "permissions",
        "SelfReloadJSON",
        "require",
        "servers",
        "handle",
        "m",
        "c",
        "bot",
        "author",
        "id",
        "commands",
        "member",
        "roles",
        "cache",
        "find",
        "role",
        "guild",
        "modrole",
        "name",
        "adminrole"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAIA,WAAW,GAAG,EAAlB;;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,OAAO,GAAG,IAAIF,cAAJ,CAAmB,0BAAnB,CAAd;;AAGAD,WAAW,CAACI,MAAZ,GAAqB,UAASC,CAAT,EAAWC,CAAX,EAAaC,GAAb,EAAiB;AAAE;AACpC,MAAGF,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBAAf,IAAwCJ,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBAA1D,EACA;AACI,WAAO,IAAP;AACH;;AACD,UAAOC,gBAASJ,CAAT,EAAYN,WAAnB;AACI,SAAK,CAAL;AACI,aAAO,IAAP;AACA;;AAEJ,SAAK,CAAL;AACI,UAAGK,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqBC,IAArB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACN,EAAL,KAAYN,OAAO,CAACE,CAAC,CAACW,KAAF,CAAQP,EAAT,CAAP,CAAoBQ,OAApC;AAAA,OAA9B,KAA8EZ,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqBC,IAArB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACG,IAAL,KAAc,QAAlB;AAAA,OAA9B,CAA9E,IACCb,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBADhB,IACyCJ,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBAD3D,EACgF;AAC5E,eAAO,IAAP;AACH,OAHD,MAII;AACA,eAAO,KAAP;AACH;;AACD;;AAEJ,SAAK,CAAL;AACI,UAAGJ,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqBC,IAArB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACN,EAAL,KAAYN,OAAO,CAACE,CAAC,CAACW,KAAF,CAAQP,EAAT,CAAP,CAAoBU,SAApC;AAAA,OAA9B,KAAgFd,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqBC,IAArB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACG,IAAL,KAAc,UAAlB;AAAA,OAA9B,CAAhF,IACCb,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBADhB,IACyCJ,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBAD3D,EACiF;AAC7E,eAAO,IAAP;AACH,OAHD,MAII;AACA,eAAO,KAAP;AACH;;AACD;;AACJ,SAAK,CAAL;AACI,UAAGJ,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBAAf,IAAwCJ,CAAC,CAACG,MAAF,CAASC,EAAT,IAAe,oBAA1D,EAA+E;AAC3E,eAAO,IAAP;AACH,OAFD,MAGK,OAAO,KAAP;;AACL;AA7BR;AA+BH,CApCD",
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\security\\",
      "sourcesContent": [
        "import { commands } from '../basic';\r\n\r\nlet permissions = {}\r\nvar SelfReloadJSON = require('self-reload-json');\r\nlet servers = new SelfReloadJSON('././storage/servers.json');\r\n\r\n\r\npermissions.handle = function(m,c,bot){ // 0: user, 1: moderator, 2: admin, 3: debug\r\n    if(m.author.id == \"713739988109361222\"  || m.author.id == \"217327385912147968\")\r\n    {\r\n        return true\r\n    }\r\n    switch(commands[c].permissions){\r\n        case 0:\r\n            return true\r\n            break\r\n\r\n        case 1:\r\n            if(m.member.roles.cache.find(role => role.id === servers[m.guild.id].modrole) || m.member.roles.cache.find(role => role.name === \"dy!mod\") || \r\n                m.author.id == \"713739988109361222\"  || m.author.id == \"217327385912147968\"){\r\n                return true\r\n            }\r\n            else{\r\n                return false\r\n            }\r\n            break\r\n\r\n        case 2:\r\n            if(m.member.roles.cache.find(role => role.id === servers[m.guild.id].adminrole) || m.member.roles.cache.find(role => role.name === \"dy!admin\") ||\r\n                m.author.id == \"713739988109361222\"  || m.author.id == \"217327385912147968\" ){\r\n                return true\r\n            }\r\n            else{\r\n                return false\r\n            }\r\n            break\r\n        case 3:\r\n            if(m.author.id == \"713739988109361222\"  || m.author.id == \"217327385912147968\"){\r\n                return true\r\n            }\r\n            else return false\r\n            break\r\n    }\r\n}\r\n\r\nexport {permissions}"
      ]
    },
    "sourceType": "script",
    "mtime": 1626911790610
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\basic\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"filename\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\\\\modules\\\\basic\\\\startup.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\bficm\\\\OneDrive\\\\Documents\\\\VSGithub\\\\dbot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\startup.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\startup.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\startup.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
        "sourceFileName": "startup.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startup = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar startup = {};\nexports.startup = startup;\n\nvar SelfReloadJSON = require('self-reload-json');\n\nvar fs = require('fs');\n\nvar servers = new SelfReloadJSON('././storage/servers.json');\nstartup.setup = {\n  description: \"No description\",\n  permissions: 2,\n  \"function\": function () {\n    var _function2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(m, bot) {\n      var embed, serv, modrole, adminrole, base;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(m.guild.available && !m.guild.me.hasPermission(['ADMINISTRATOR']))) {\n                _context.next = 4;\n                break;\n              }\n\n              embed = {\n                \"title\": \"i need administrative perms!\",\n                \"description\": \"Please edit your generated roles accordingly.\",\n                \"color\": 11227664,\n                \"footer\": {\n                  \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\n                  \"text\": \"BOTTOM TEXT\"\n                },\n                \"image\": {\n                  \"url\": \"https://i.imgur.com/3P8rZAH.png\"\n                }\n              };\n              m.channel.send({\n                embed: embed\n              });\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(servers[m.channel.guild.id] === undefined)) {\n                _context.next = 10;\n                break;\n              }\n\n              serv = m.channel.guild;\n\n              try {\n                modrole = serv.roles.fetch(678425668026892347);\n                adminrole = serv.roles.fetch(720454075807695021);\n                base = \"{ \\\"prefix\\\": \\\"dy!\\\", \\\"modrole\\\": \\\"\".concat(modrole.id, \"\\\", \\\"adminrole\\\": \\\"\").concat(adminrole.id, \"\\\", \\\"vip\\\": false, \\\"eventrole\\\": \\\"\\\", \\\"geventrole\\\": \\\"\\\" }\");\n                fs.readFile(\"././storage/servers.json\", function (err, data) {\n                  var asfg = JSON.parse(data);\n                  asfg[serv.id] = JSON.parse(base);\n                  fs.writeFile(\"././storage/servers.json\", JSON.stringify(asfg), function () {});\n                });\n              } catch (error) {\n                console.log(error);\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 10:\n              m.channel.send(\"you already set this server up dumb dumb\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function _function(_x, _x2) {\n      return _function2.apply(this, arguments);\n    }\n\n    return _function;\n  }()\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0dXAuanMiXSwibmFtZXMiOlsic3RhcnR1cCIsIlNlbGZSZWxvYWRKU09OIiwicmVxdWlyZSIsImZzIiwic2VydmVycyIsInNldHVwIiwiZGVzY3JpcHRpb24iLCJwZXJtaXNzaW9ucyIsIm0iLCJib3QiLCJndWlsZCIsImF2YWlsYWJsZSIsIm1lIiwiaGFzUGVybWlzc2lvbiIsImVtYmVkIiwiY2hhbm5lbCIsInNlbmQiLCJpZCIsInVuZGVmaW5lZCIsInNlcnYiLCJtb2Ryb2xlIiwicm9sZXMiLCJmZXRjaCIsImFkbWlucm9sZSIsImJhc2UiLCJyZWFkRmlsZSIsImVyciIsImRhdGEiLCJhc2ZnIiwiSlNPTiIsInBhcnNlIiwid3JpdGVGaWxlIiwic3RyaW5naWZ5IiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLElBQUlBLE9BQU8sR0FBRyxFQUFkOzs7QUFDQSxJQUFJQyxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFDQSxJQUFJQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWhCOztBQUNBLElBQUlFLE9BQU8sR0FBRyxJQUFJSCxjQUFKLENBQW1CLDBCQUFuQixDQUFkO0FBR0FELE9BQU8sQ0FBQ0ssS0FBUixHQUFnQjtBQUNaQyxFQUFBQSxXQUFXLEVBQUUsZ0JBREQ7QUFFZEMsRUFBQUEsV0FBVyxFQUFFLENBRkM7QUFHZDtBQUFBLDZFQUFVLGlCQUFlQyxDQUFmLEVBQWlCQyxHQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxvQkFDTEQsQ0FBQyxDQUFDRSxLQUFGLENBQVFDLFNBQVIsSUFBcUIsQ0FBRUgsQ0FBQyxDQUFDRSxLQUFGLENBQVFFLEVBQVIsQ0FBV0MsYUFBWCxDQUF5QixDQUFDLGVBQUQsQ0FBekIsQ0FEbEI7QUFBQTtBQUFBO0FBQUE7O0FBRUVDLGNBQUFBLEtBRkYsR0FFVTtBQUNWLHlCQUFTLDhCQURDO0FBRVYsK0JBQWUsK0NBRkw7QUFHVix5QkFBUyxRQUhDO0FBSVYsMEJBQVU7QUFDUiw4QkFBWSxnREFESjtBQUVSLDBCQUFRO0FBRkEsaUJBSkE7QUFRVix5QkFBUztBQUNQLHlCQUFPO0FBREE7QUFSQyxlQUZWO0FBY0pOLGNBQUFBLENBQUMsQ0FBQ08sT0FBRixDQUFVQyxJQUFWLENBQWU7QUFBQ0YsZ0JBQUFBLEtBQUssRUFBRUE7QUFBUixlQUFmO0FBZEk7O0FBQUE7QUFBQSxvQkFpQkxWLE9BQU8sQ0FBQ0ksQ0FBQyxDQUFDTyxPQUFGLENBQVVMLEtBQVYsQ0FBZ0JPLEVBQWpCLENBQVAsS0FBZ0NDLFNBakIzQjtBQUFBO0FBQUE7QUFBQTs7QUFrQkFDLGNBQUFBLElBbEJBLEdBa0JPWCxDQUFDLENBQUNPLE9BQUYsQ0FBVUwsS0FsQmpCOztBQW1CSixrQkFBRztBQUNLVSxnQkFBQUEsT0FETCxHQUNlRCxJQUFJLENBQUNFLEtBQUwsQ0FBV0MsS0FBWCxDQUFpQixrQkFBakIsQ0FEZjtBQUVLQyxnQkFBQUEsU0FGTCxHQUVpQkosSUFBSSxDQUFDRSxLQUFMLENBQVdDLEtBQVgsQ0FBaUIsa0JBQWpCLENBRmpCO0FBSUNFLGdCQUFBQSxJQUpELG1EQUkwQ0osT0FBTyxDQUFDSCxFQUpsRCxrQ0FJd0VNLFNBQVMsQ0FBQ04sRUFKbEY7QUFLSGQsZ0JBQUFBLEVBQUUsQ0FBQ3NCLFFBQUgsQ0FBWSwwQkFBWixFQUF3QyxVQUFVQyxHQUFWLEVBQWVDLElBQWYsRUFBcUI7QUFDekQsc0JBQUlDLElBQUksR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdILElBQVgsQ0FBWDtBQUNBQyxrQkFBQUEsSUFBSSxDQUFDVCxJQUFJLENBQUNGLEVBQU4sQ0FBSixHQUFnQlksSUFBSSxDQUFDQyxLQUFMLENBQVdOLElBQVgsQ0FBaEI7QUFDQXJCLGtCQUFBQSxFQUFFLENBQUM0QixTQUFILENBQWEsMEJBQWIsRUFBeUNGLElBQUksQ0FBQ0csU0FBTCxDQUFlSixJQUFmLENBQXpDLEVBQThELFlBQUksQ0FBRSxDQUFwRTtBQUNILGlCQUpEO0FBS0MsZUFWRCxDQVVDLE9BQU1LLEtBQU4sRUFBWTtBQUNiQyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEtBQVo7QUFDQzs7QUEvQkc7O0FBQUE7QUFtQ0p6QixjQUFBQSxDQUFDLENBQUNPLE9BQUYsQ0FBVUMsSUFBVixDQUFlLDBDQUFmOztBQW5DSTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFWOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBSGMsQ0FBaEIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxiZmljbVxcT25lRHJpdmVcXERvY3VtZW50c1xcVlNHaXRodWJcXGRib3RcXG1vZHVsZXNcXGJhc2ljXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgc3RhcnR1cCA9IHt9XHJcbnZhciBTZWxmUmVsb2FkSlNPTiA9IHJlcXVpcmUoJ3NlbGYtcmVsb2FkLWpzb24nKTtcclxudmFyIGZzID0gcmVxdWlyZSgnZnMnKVxyXG5sZXQgc2VydmVycyA9IG5ldyBTZWxmUmVsb2FkSlNPTignLi8uL3N0b3JhZ2Uvc2VydmVycy5qc29uJyk7XHJcblxyXG5cclxuc3RhcnR1cC5zZXR1cCA9IHtcclxuICAgIGRlc2NyaXB0aW9uOiBcIk5vIGRlc2NyaXB0aW9uXCIsXHJcbiAgcGVybWlzc2lvbnM6IDIsXHJcbiAgZnVuY3Rpb246IGFzeW5jIGZ1bmN0aW9uKG0sYm90KXtcclxuICAgIGlmKG0uZ3VpbGQuYXZhaWxhYmxlICYmICEobS5ndWlsZC5tZS5oYXNQZXJtaXNzaW9uKFsnQURNSU5JU1RSQVRPUiddKSkpe1xyXG4gICAgICAgIGNvbnN0IGVtYmVkID0ge1xyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiaSBuZWVkIGFkbWluaXN0cmF0aXZlIHBlcm1zIVwiLFxyXG4gICAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiUGxlYXNlIGVkaXQgeW91ciBnZW5lcmF0ZWQgcm9sZXMgYWNjb3JkaW5nbHkuXCIsXHJcbiAgICAgICAgICAgIFwiY29sb3JcIjogMTEyMjc2NjQsXHJcbiAgICAgICAgICAgIFwiZm9vdGVyXCI6IHtcclxuICAgICAgICAgICAgICBcImljb25fdXJsXCI6IFwiaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vZW1iZWQvYXZhdGFycy8wLnBuZ1wiLFxyXG4gICAgICAgICAgICAgIFwidGV4dFwiOiBcIkJPVFRPTSBURVhUXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJpbWFnZVwiOiB7XHJcbiAgICAgICAgICAgICAgXCJ1cmxcIjogXCJodHRwczovL2kuaW1ndXIuY29tLzNQOHJaQUgucG5nXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICBtLmNoYW5uZWwuc2VuZCh7ZW1iZWQ6IGVtYmVkfSk7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBpZihzZXJ2ZXJzW20uY2hhbm5lbC5ndWlsZC5pZF0gPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgbGV0IHNlcnYgPSBtLmNoYW5uZWwuZ3VpbGQ7XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBsZXQgbW9kcm9sZSA9IHNlcnYucm9sZXMuZmV0Y2goNjc4NDI1NjY4MDI2ODkyMzQ3KTtcclxuICAgICAgICAgICAgbGV0IGFkbWlucm9sZSA9IHNlcnYucm9sZXMuZmV0Y2goNzIwNDU0MDc1ODA3Njk1MDIxKTtcclxuXHJcbiAgICAgICAgbGV0IGJhc2UgPSBgeyBcInByZWZpeFwiOiBcImR5IVwiLCBcIm1vZHJvbGVcIjogXCIke21vZHJvbGUuaWR9XCIsIFwiYWRtaW5yb2xlXCI6IFwiJHthZG1pbnJvbGUuaWR9XCIsIFwidmlwXCI6IGZhbHNlLCBcImV2ZW50cm9sZVwiOiBcIlwiLCBcImdldmVudHJvbGVcIjogXCJcIiB9YDtcclxuICAgICAgICBmcy5yZWFkRmlsZShcIi4vLi9zdG9yYWdlL3NlcnZlcnMuanNvblwiLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICAgICAgICAgIHZhciBhc2ZnID0gSlNPTi5wYXJzZShkYXRhKVxyXG4gICAgICAgICAgICBhc2ZnW3NlcnYuaWRdID0gSlNPTi5wYXJzZShiYXNlKVxyXG4gICAgICAgICAgICBmcy53cml0ZUZpbGUoXCIuLy4vc3RvcmFnZS9zZXJ2ZXJzLmpzb25cIiwgSlNPTi5zdHJpbmdpZnkoYXNmZyksKCk9Pnt9KVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIH1jYXRjaChlcnJvcil7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgZWxzZXtcclxuICAgICAgICBtLmNoYW5uZWwuc2VuZChcInlvdSBhbHJlYWR5IHNldCB0aGlzIHNlcnZlciB1cCBkdW1iIGR1bWJcIilcclxuICAgIH1cclxufX1cclxuZXhwb3J0IHtzdGFydHVwfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "startup.js"
      ],
      "names": [
        "startup",
        "SelfReloadJSON",
        "require",
        "fs",
        "servers",
        "setup",
        "description",
        "permissions",
        "m",
        "bot",
        "guild",
        "available",
        "me",
        "hasPermission",
        "embed",
        "channel",
        "send",
        "id",
        "undefined",
        "serv",
        "modrole",
        "roles",
        "fetch",
        "adminrole",
        "base",
        "readFile",
        "err",
        "data",
        "asfg",
        "JSON",
        "parse",
        "writeFile",
        "stringify",
        "error",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;;;AAAA,IAAIA,OAAO,GAAG,EAAd;;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,OAAO,GAAG,IAAIH,cAAJ,CAAmB,0BAAnB,CAAd;AAGAD,OAAO,CAACK,KAAR,GAAgB;AACZC,EAAAA,WAAW,EAAE,gBADD;AAEdC,EAAAA,WAAW,EAAE,CAFC;AAGd;AAAA,6EAAU,iBAAeC,CAAf,EAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACLD,CAAC,CAACE,KAAF,CAAQC,SAAR,IAAqB,CAAEH,CAAC,CAACE,KAAF,CAAQE,EAAR,CAAWC,aAAX,CAAyB,CAAC,eAAD,CAAzB,CADlB;AAAA;AAAA;AAAA;;AAEEC,cAAAA,KAFF,GAEU;AACV,yBAAS,8BADC;AAEV,+BAAe,+CAFL;AAGV,yBAAS,QAHC;AAIV,0BAAU;AACR,8BAAY,gDADJ;AAER,0BAAQ;AAFA,iBAJA;AAQV,yBAAS;AACP,yBAAO;AADA;AARC,eAFV;AAcJN,cAAAA,CAAC,CAACO,OAAF,CAAUC,IAAV,CAAe;AAACF,gBAAAA,KAAK,EAAEA;AAAR,eAAf;AAdI;;AAAA;AAAA,oBAiBLV,OAAO,CAACI,CAAC,CAACO,OAAF,CAAUL,KAAV,CAAgBO,EAAjB,CAAP,KAAgCC,SAjB3B;AAAA;AAAA;AAAA;;AAkBAC,cAAAA,IAlBA,GAkBOX,CAAC,CAACO,OAAF,CAAUL,KAlBjB;;AAmBJ,kBAAG;AACKU,gBAAAA,OADL,GACeD,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiB,kBAAjB,CADf;AAEKC,gBAAAA,SAFL,GAEiBJ,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiB,kBAAjB,CAFjB;AAICE,gBAAAA,IAJD,mDAI0CJ,OAAO,CAACH,EAJlD,kCAIwEM,SAAS,CAACN,EAJlF;AAKHd,gBAAAA,EAAE,CAACsB,QAAH,CAAY,0BAAZ,EAAwC,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACzD,sBAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAX;AACAC,kBAAAA,IAAI,CAACT,IAAI,CAACF,EAAN,CAAJ,GAAgBY,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAhB;AACArB,kBAAAA,EAAE,CAAC4B,SAAH,CAAa,0BAAb,EAAyCF,IAAI,CAACG,SAAL,CAAeJ,IAAf,CAAzC,EAA8D,YAAI,CAAE,CAApE;AACH,iBAJD;AAKC,eAVD,CAUC,OAAMK,KAAN,EAAY;AACbC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC;;AA/BG;;AAAA;AAmCJzB,cAAAA,CAAC,CAACO,OAAF,CAAUC,IAAV,CAAe,0CAAf;;AAnCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAHc,CAAhB",
      "sourceRoot": "C:\\Users\\bficm\\OneDrive\\Documents\\VSGithub\\dbot\\modules\\basic\\",
      "sourcesContent": [
        "let startup = {}\r\nvar SelfReloadJSON = require('self-reload-json');\r\nvar fs = require('fs')\r\nlet servers = new SelfReloadJSON('././storage/servers.json');\r\n\r\n\r\nstartup.setup = {\r\n    description: \"No description\",\r\n  permissions: 2,\r\n  function: async function(m,bot){\r\n    if(m.guild.available && !(m.guild.me.hasPermission(['ADMINISTRATOR']))){\r\n        const embed = {\r\n            \"title\": \"i need administrative perms!\",\r\n            \"description\": \"Please edit your generated roles accordingly.\",\r\n            \"color\": 11227664,\r\n            \"footer\": {\r\n              \"icon_url\": \"https://cdn.discordapp.com/embed/avatars/0.png\",\r\n              \"text\": \"BOTTOM TEXT\"\r\n            },\r\n            \"image\": {\r\n              \"url\": \"https://i.imgur.com/3P8rZAH.png\"\r\n            }\r\n          };\r\n        m.channel.send({embed: embed});\r\n        return\r\n    }\r\n    if(servers[m.channel.guild.id] === undefined){\r\n        let serv = m.channel.guild;\r\n        try{\r\n            let modrole = serv.roles.fetch(678425668026892347);\r\n            let adminrole = serv.roles.fetch(720454075807695021);\r\n\r\n        let base = `{ \"prefix\": \"dy!\", \"modrole\": \"${modrole.id}\", \"adminrole\": \"${adminrole.id}\", \"vip\": false, \"eventrole\": \"\", \"geventrole\": \"\" }`;\r\n        fs.readFile(\"././storage/servers.json\", function (err, data) {\r\n            var asfg = JSON.parse(data)\r\n            asfg[serv.id] = JSON.parse(base)\r\n            fs.writeFile(\"././storage/servers.json\", JSON.stringify(asfg),()=>{})\r\n        });\r\n        }catch(error){\r\n        console.log(error)\r\n        }\r\n        return\r\n    }\r\n    else{\r\n        m.channel.send(\"you already set this server up dumb dumb\")\r\n    }\r\n}}\r\nexport {startup}"
      ]
    },
    "sourceType": "script",
    "mtime": 1626911664457
  }
}